services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: "rabbitmq"
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_docker_network
    restart: always
  codefest:
    container_name: "codefest"
    image: leonardocbsr/codefest:latest
    environment:
      NO_TIMEOUT: true
      POPULATE_USERS: false
      QUEUE_HOST: rabbitmq
      QUEUE_PORT: 5672
      QUEUE_USER: guest
      QUEUE_PASS: guest
    depends_on:
      - rabbitmq
    restart: always
    networks:
      - rabbitmq_docker_network

  # api:
  #   container_name: "goponey_api"
  #   build: .
  #   ports:
  #     - 8000:8000
  #   networks:
  #     - api_db_network
  #   environment:
  #     - DATABASE_URL=postgres://goponey:poney@db:5432/goponey_db
  #   depends_on:
  #     - db
  #   restart: always

  db:
    container_name: "goponey_db"
    image: postgres:latest
    environment:
      POSTGRES_DB: goponey_db
      POSTGRES_USER: goponey
      POSTGRES_PASSWORD: poney
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - api_db_network
    restart: always

networks:
  rabbitmq_docker_network:
    driver: bridge
  api_db_network:
    driver: bridge

volumes:
  db_data:
